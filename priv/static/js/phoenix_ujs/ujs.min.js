var UJS=function(){"use strict";function e(t){if("A"==t.tagName)return t;if(!(i.indexOf(t.tagName)>=0))return t.parentNode?e(t.parentNode):void 0}function t(){}function n(e,t,n){var r=document.createEvent("Event");return r.initEvent(t,!0,!0),r.data=n,e.dispatchEvent(r)}function r(e,t,n){return"json"==n?(e.setRequestHeader("Content-type","application/json"),e.setRequestHeader("Accept","application/json"),t=void 0===t?{}:t,JSON.stringify(t)):"text"==n?(e.setRequestHeader("Content-type","text/plain"),e.setRequestHeader("Accept","text/plain"),t):"object"==(void 0===n?"undefined":m(n))?(e.setRequestHeader("Content-type",n[0]),e.setRequestHeader("Accept",n[1]),"function"==typeof n[2]?n[2](t):t):t}function o(e,t,n){var r=document.createElement("input");r.setAttribute("type","hidden"),r.setAttribute("name",t),r.setAttribute("value",n),e.appendChild(r)}function a(e,t){var n=document.createElement("form");n.method="POST",n.action=e,n.style.display="none",o(n,c.param,c.token),"POST"!=t&&o(n,c.method,t),document.body.appendChild(n),n.submit()}var u=function(){return Element.prototype.matches||Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(){return!1}}(),i=["DIV","FORM","BODY","HTML","TD","TR","LI","UL"],s={acquireLink:function(t){var n=e(t);if(n&&u.call(n,"[ujs-method], [ujs-remote]"))return n},isDisabled:function(e){return u.call(e,"[disabled]")},isRemote:function(e){return e.hasAttribute("ujs-remote")&&"false"!=e.getAttribute("ujs-remote")}},c={header:"x-csrf-token",method:"_method",param:"_csrf_token",token:null},d=document.head.querySelector('meta[name="csrf-token"]');d?(c.token=d.getAttribute("content"),d.hasAttribute("csrf-param")&&(c.param=d.getAttribute("csrf-param")),d.hasAttribute("csrf-header")&&(c.header=d.getAttribute("csrf-header")),d.hasAttribute("method-param")&&(c.method=d.getAttribute("method-param"))):console&&console.log('[phoenix_ujs] `meta[name="csrf-token"]` is missing. Please add it into the page');var m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f=function(e,o,a){a=a||{};var u=new XMLHttpRequest;u.open(o,e),u.setRequestHeader("X-Requested-With","XMLHttpRequest"),u.setRequestHeader(c.header,c.token);var i=a.headers||{};Object.keys(i).forEach(function(e){return u.setRequestHeader(e,i[e])});var s=a.target||document,d=a.beforeSend,m={xhr:u,options:a},f=a.success||t,p=a.error||t,l=a.complete||t;return d&&!1===d(m)?u:n(s,"ajax:beforeSend",m)?(u.addEventListener("load",function(){u.status>=200&&u.status<300?(n(s,"ajax:success",{xhr:u}),f(u)):(u.status<200||u.status>=400)&&(n(s,"ajax:error",{xhr:u}),p(u)),n(s,"ajax:complete",{xhr:u}),l(u)}),u.send(r(u,a.data,a.type)),u):u},p=function(e,t){var n=(e.getAttribute("ujs-method")||"GET").toUpperCase();return s.isRemote(e)?(f(e.href,n,{target:e}),!0):"GET"!=n&&(a(e.href,n),!0)},l=["GET","HEAD"],h=function(e){return Array.from(e).map(function(e){return encodeURIComponent(e[0])+"="+encodeURIComponent(e[1])}).join("&")},b=function(e){if(s.isRemote(e)){var t=void 0,n=new FormData(e),r={target:e};return-1===l.indexOf(e.method.toUpperCase())?(t=e.action,r.data=n):t=e.action+(-1===e.action.indexOf("?")?"?":"&")+h(n),f(t,e.method,r),!0}return!1},y={confirm:function(e){return window.confirm(e)},csrf:c,xhr:f},v=function(e){return!e.hasAttribute("ujs-confirm")||y.confirm(e.getAttribute("ujs-confirm"))};return document.addEventListener("click",function(e){if(0===e.button){var t=s.acquireLink(e.target);t&&(s.isDisabled(t)||!v(t)||p(t))&&e.preventDefault()}},!1),document.addEventListener("submit",function(e){var t=e.target;(s.isDisabled(t)||!v(t)||b(t))&&e.preventDefault()}),document.addEventListener("load",function e(){document.removeEventListener("load",e,!1),document.querySelectorAll('form input[name="'+c.param+'"]').forEach(function(e){e.value=c.token})},!1),y}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
